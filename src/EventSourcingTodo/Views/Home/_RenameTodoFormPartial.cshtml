@model ChangeTodoDescriptionPostModel
@*<form asp-controller="Home" asp-action="ChangeTodoDescription" method="post" role="form" class="renameTodoForm" data-estd-ajax-jqval-submit-on-done="todoListReplacingAjaxSubmitOnDone">
    <label asp-for="Description" class="sr-only"></label>
    <div class="input-group">
        <input asp-for="TodoId" />
        <input asp-for="Description" class="form-control renameTodoBtnClickFocusTarget" placeholder="What do you need to do?" />
        <span class="input-group-btn">
            <button type="submit" class="btn btn-success" aria-label="Rename To-do">
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
            </button>
        </span>
    </div>
    <span asp-validation-for="Description"></span>
</form>*@
@*See Notes.txt for explanation of problems with the form tagHelper*@
<form action="@Url.Action("ChangeTodoDescription", "Home")" method="post" role="form" class="renameTodoForm" data-estd-ajax-jqval-submit-on-done="todoListReplacingAjaxSubmitOnDone" novalidate="novalidate">
    <label asp-for="Description" class="sr-only"></label>
    <div class="input-group">
        <input type="hidden" name="@Html.NameFor(m => m.TodoId)" value="@Model.TodoId">
        <input class="form-control renameTodoBtnClickFocusTarget" placeholder="What do you need to do?" type="text" data-val="true" data-val-required="You need to name your to-do" id="@Html.IdFor(m => m.Description)" name="@Html.NameFor(m => m.Description)" value="@Model.Description">
        <span class="input-group-btn">
            <button type="submit" class="btn btn-success" aria-label="Rename To-do">
                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
            </button>
        </span>
    </div>
    <span class="field-validation-valid" data-valmsg-for="@Html.IdFor(m => m.Description)" data-valmsg-replace="true"></span>
    @Html.AntiForgeryToken()
</form>